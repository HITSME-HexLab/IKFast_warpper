cmake_minimum_required(VERSION 3.0.2)

project(IKFast_warpper)
# change this to your library name
# IMPORTANT This is also the name of generated cmake project & header file
set(LIB_NAME ikfast_example_lib)

if(NOT WIN32)
    string(ASCII 27 Esc)
    set(ColourReset "${Esc}[m")
    set(ColourBold  "${Esc}[1m")
    set(Red         "${Esc}[31m")
    set(Green       "${Esc}[32m")
endif()
message(STATUS "${Green}Generating IKFast library for ${ColourBold}${LIB_NAME}${ColourReset}")

## Settings
include(cmake/addIKFast.cmake)
add_compile_options(-O3 -Wall -shared -fPIC)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")

set(TEMPLATE_DIR ${CMAKE_SOURCE_DIR}/template)
set(SRC_DIR ${CMAKE_SOURCE_DIR}/src)
set(BUILD_DIR ${CMAKE_BINARY_DIR}/temp)
set(LIB_DIR ${CMAKE_SOURCE_DIR}/lib/${LIB_NAME})

## Generate IKFast library
file(GLOB IKFAST_SRC_LIST ${SRC_DIR}/*.cpp)

set(IKFAST_NS_LIST)
foreach(IKFAST_SRC ${IKFAST_SRC_LIST})
    get_filename_component(IKFAST_NS ${IKFAST_SRC} NAME_WE)
    list(APPEND IKFAST_NS_LIST ${IKFAST_NS})
    add_IKFast(${LIB_NAME} ${IKFAST_NS} ${IKFAST_SRC})
    add_subdirectory(${BUILD_DIR}/${IKFAST_NS})
endforeach()

# add header file ${ikfast_example_lib}.h to include all .h files
file(GLOB IKFAST_HEADER_LIST ${LIB_DIR}/*.h)
set(LIB_HEADER ${LIB_DIR}/${LIB_NAME}.h)
file(WRITE ${LIB_HEADER} "// This file is automatically generated by CMake.\n#pragma once\n")
foreach(IKFAST_HEADER_FILE ${IKFAST_HEADER_LIST})
    get_filename_component(IKFAST_HEADER_FILE_NAME ${IKFAST_HEADER_FILE} NAME)
    if(${IKFAST_HEADER_FILE_NAME} STREQUAL ${LIB_NAME}.h)
        continue()
    endif()
    file(APPEND ${LIB_HEADER} "#include \"${IKFAST_HEADER_FILE_NAME}\"\n")
endforeach()

# add empty src file
file(WRITE ${LIB_DIR}/${LIB_NAME}.cpp "// This file is automatically generated by CMake.\n")

# add CmakeLists.txt
configure_file(${TEMPLATE_DIR}/libcmake.txt.in ${LIB_DIR}/CMakeLists.txt @ONLY)

# add build.sh
configure_file(${TEMPLATE_DIR}/build.sh ${LIB_DIR}/build.sh @ONLY)

# add test file (using the first namespace in IKFAST_NS_LIST)
list(GET IKFAST_NS_LIST 0 TEST_NS)
configure_file(${TEMPLATE_DIR}/test.cpp.in ${LIB_DIR}/test.cpp @ONLY)